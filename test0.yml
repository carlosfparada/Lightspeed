---

- name: AWS RHEL Deployment
  hosts: aws
  tasks:
    - name: create vpc
      amazon.aws.ec2_vpc_net:
        name: "{{ _name_ }}"
        cidr_block: "{{ _cidr_block_ }}"
        region: "{{ _region_ }}"
        state: present
        aws_access_key: "{{ _aws_access_key_ }}"
        aws_secret_key: "{{ _aws_secret_key_ }}"
      register: vpc
    - name: create a subnet
      amazon.aws.ec2_vpc_subnet:
        state: present
        vpc_id: "{{ _vpc_id_ }}"
        region: "{{ _region_ }}"
        cidr: "{{ _cidr_ }}"
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        tags:
          Name: "{{ _name }}"
      register: subnet
    - name: create igw
      amazon.aws.ec2_vpc_igw:
        vpc_id: "{{ _vpc_id_ }}"
        region: "{{ _region_ }}"
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        state: present
      register: igw
    - name: create route table and igw route
      amazon.aws.ec2_vpc_route_table:
        vpc_id: "{{ _vpc_id_ }}"
        region: "{{ _region_ }}"
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        subnets:
          - "{{ subnet.subnet.id }}"
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{ igw.gateway_id }}"
        tags:
          Name: "{{ _name }}"
    - name: create sg and open tcp port 80
      amazon.aws.ec2_security_group:
        name: webserver-sg
        description: sg for http
        vpc_id: "{{ _vpc_id_ }}"
        region: "{{ _region_ }}"
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        rules:
          - proto: tcp
            ports:
              - 80
            cidr_ip: 0.0.0.0/0
            rule_desc: allow all on port 80
          - proto: tcp
            ports:
              - 22
            cidr_ip: 0.0.0.0/0
            rule_desc: allow all on port 22
    - name: create rhel instance
      amazon.aws.ec2_instance:
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        wait: true
        region: "{{ _region_ }}"
        instance_type: t2.micro
        image_id: "{{ _image_id_ }}"
        wait_timeout: 500
        security_group: webserver-sg
        vpc_subnet_id: "{{ _vpc_subnet_id_ }}"
        network:
          assign_public_ip: true
        tags:
          Name: "{{ _name }}"
      register: ec2
    - name: sleep until rhel ssh port is responding
      ansible.builtin.wait_for:
        host: "{{ item.public_dns_name }}"
        port: 22
        delay: 30
        timeout: 600
        state: started
      loop: "{{ ec2.instances |flatten(levels=1) }}"
    - name: install httpd package
      become: true
      ansible.builtin.package:
        name: httpd
        state: present
    - name: start httpd service
      ansible.builtin.service:
        name: httpd
        state: started
        enabled: true
    
    



    
