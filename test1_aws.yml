---

- name: AWS RHEL Deployment
  hosts: aws
  tasks: 
    - name: create a vpc with full variables
      amazon.aws.ec2_vpc_net:
        name: "{{ _name_ }}"
        cidr_block: "{{ _cidr_block_ }}"
        region: "{{ _region_ }}"
        state: present
        tags:
          Name: "{{ vpc_name }}"
      register: vpc_result
    - name: create a subnet
      amazon.aws.ec2_vpc_subnet:
        cidr: "{{ _cidr_ }}"
        az: "{{ _az_ }}"
        vpc_id: "{{ _vpc_id_ }}"
        region: "{{ _region_ }}"
        state: present
        tags:
          Name: "{{ vpc_name }}"
      register: subnet_result
    - name: create igw
      amazon.aws.ec2_vpc_igw:
        region: "{{ _region_ }}"
        state: present
        tags:
          Name: "{{ vpc_name }}"
        vpc_id: "{{ _vpc_id_ }}"
      register: igw_result
    - name: create route table and igw route
      amazon.aws.ec2_vpc_route_table:
        vpc_id: "{{ _vpc_id_ }}"
        region: "{{ _region_ }}"
        tags:
          Name: "{{ vpc_name }}"
        subnets:
          - "{{ subnet_result.subnet.id }}"
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{ igw_result.gateway_id }}"
      register: route_table_result
    - name: create sg and open port 443
      amazon.aws.ec2_security_group:
        name: "{{ _name_ }}"
        description: "{{ _description_ }}"
        region: "{{ _region_ }}"
        rules:
          - proto: tcp
            from_port: 443
            to_port: 443
            cidr_ip: 0.0.0.0/0
      register: sg_result
    - name: create a rhel instance
      amazon.aws.ec2_instance:
        name: "{{ _name_ }}"
        region: "{{ _region_ }}"
        image_id: "{{ _image_id_ }}"
        vpc_subnet_id: "{{ _vpc_subnet_id_ }}"
        instance_type: "{{ _instance_type_ }}"
        security_group: "{{ _security_group_ }}"
        wait: true
        tags:
          Name: "{{ vpc_name }}"
      register: rhel_result
    - name: sleep until rhel ssh port responds
      ansible.builtin.wait_for:
        port: 22
        host: "{{ _host_ }}"
        delay: 10
        timeout: 300
    




    
